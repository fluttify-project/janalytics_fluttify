// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:io';

import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';
import 'package:janalytics_fluttify/src/android/android.export.g.dart';
import 'package:janalytics_fluttify/src/ios/ios.export.g.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
extension TypeOpJanalyticsFluttifyIOS on Ref {
  Future<bool> isJANALYTICSLaunchConfig() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::isKindOfJANALYTICSLaunchConfig', {'refId': refId});
    return result;
  }
  
  Future<bool> isJANALYTICSService() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::isKindOfJANALYTICSService', {'refId': refId});
    return result;
  }
  
  Future<bool> isJANALYTICSEventObject() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::isKindOfJANALYTICSEventObject', {'refId': refId});
    return result;
  }
  
  Future<bool> isJANALYTICSLoginEvent() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::isKindOfJANALYTICSLoginEvent', {'refId': refId});
    return result;
  }
  
  Future<bool> isJANALYTICSRegisterEvent() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::isKindOfJANALYTICSRegisterEvent', {'refId': refId});
    return result;
  }
  
  Future<bool> isJANALYTICSPurchaseEvent() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::isKindOfJANALYTICSPurchaseEvent', {'refId': refId});
    return result;
  }
  
  Future<bool> isJANALYTICSBrowseEvent() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::isKindOfJANALYTICSBrowseEvent', {'refId': refId});
    return result;
  }
  
  Future<bool> isJANALYTICSCountEvent() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::isKindOfJANALYTICSCountEvent', {'refId': refId});
    return result;
  }
  
  Future<bool> isJANALYTICSCalculateEvent() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::isKindOfJANALYTICSCalculateEvent', {'refId': refId});
    return result;
  }
  
  Future<bool> isJANALYTICSUserInfo() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::isKindOfJANALYTICSUserInfo', {'refId': refId});
    return result;
  }
  

  Future<JANALYTICSLaunchConfig> asJANALYTICSLaunchConfig() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::asJANALYTICSLaunchConfig', {'refId': refId});
    return JANALYTICSLaunchConfig()..refId = result;
  }
  
  Future<JANALYTICSService> asJANALYTICSService() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::asJANALYTICSService', {'refId': refId});
    return JANALYTICSService()..refId = result;
  }
  
  Future<JANALYTICSEventObject> asJANALYTICSEventObject() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::asJANALYTICSEventObject', {'refId': refId});
    return JANALYTICSEventObject()..refId = result;
  }
  
  Future<JANALYTICSLoginEvent> asJANALYTICSLoginEvent() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::asJANALYTICSLoginEvent', {'refId': refId});
    return JANALYTICSLoginEvent()..refId = result;
  }
  
  Future<JANALYTICSRegisterEvent> asJANALYTICSRegisterEvent() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::asJANALYTICSRegisterEvent', {'refId': refId});
    return JANALYTICSRegisterEvent()..refId = result;
  }
  
  Future<JANALYTICSPurchaseEvent> asJANALYTICSPurchaseEvent() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::asJANALYTICSPurchaseEvent', {'refId': refId});
    return JANALYTICSPurchaseEvent()..refId = result;
  }
  
  Future<JANALYTICSBrowseEvent> asJANALYTICSBrowseEvent() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::asJANALYTICSBrowseEvent', {'refId': refId});
    return JANALYTICSBrowseEvent()..refId = result;
  }
  
  Future<JANALYTICSCountEvent> asJANALYTICSCountEvent() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::asJANALYTICSCountEvent', {'refId': refId});
    return JANALYTICSCountEvent()..refId = result;
  }
  
  Future<JANALYTICSCalculateEvent> asJANALYTICSCalculateEvent() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::asJANALYTICSCalculateEvent', {'refId': refId});
    return JANALYTICSCalculateEvent()..refId = result;
  }
  
  Future<JANALYTICSUserInfo> asJANALYTICSUserInfo() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('RefClass::asJANALYTICSUserInfo', {'refId': refId});
    return JANALYTICSUserInfo()..refId = result;
  }
  
}