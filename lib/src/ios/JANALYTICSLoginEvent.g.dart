// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:janalytics_fluttify/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class JANALYTICSLoginEvent extends JANALYTICSEventObject  {
  //region constants
  static const String name__ = 'JANALYTICSLoginEvent';

  
  //endregion

  //region creators
  static Future<JANALYTICSLoginEvent> create__({ bool init = true /* ios only */ }) async {
    final refId = await MethodChannel('me.yohom/janalytics_fluttify', StandardMethodCodec(FluttifyMessageCodec('janalytics_fluttify'))).invokeMethod('ObjectFactory::createJANALYTICSLoginEvent', {'init': init});
    final object = JANALYTICSLoginEvent()..refId = refId..tag__ = 'janalytics_fluttify';
    return object;
  }
  
  static Future<List<JANALYTICSLoginEvent>> create_batch__(int length, { bool init = true /* ios only */ }) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
    final List resultBatch = await MethodChannel('me.yohom/janalytics_fluttify', StandardMethodCodec(FluttifyMessageCodec('janalytics_fluttify'))).invokeMethod('ObjectFactory::create_batchJANALYTICSLoginEvent', {'length': length, 'init': init});
  
    final List<JANALYTICSLoginEvent> typedResult = resultBatch.map((result) => JANALYTICSLoginEvent()..refId = result..tag__ = 'janalytics_fluttify').toList();
    return typedResult;
  }
  
  //endregion

  //region getters
  Future<String> get_method() async {
    final __result__ = await MethodChannel('me.yohom/janalytics_fluttify', StandardMethodCodec(FluttifyMessageCodec('janalytics_fluttify'))).invokeMethod("JANALYTICSLoginEvent::get_method", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  Future<bool> get_success() async {
    final __result__ = await MethodChannel('me.yohom/janalytics_fluttify', StandardMethodCodec(FluttifyMessageCodec('janalytics_fluttify'))).invokeMethod("JANALYTICSLoginEvent::get_success", {'__this__': this});
    return __result__ == null ? null : (__result__);
  }
  
  //endregion

  //region setters
  Future<void> set_method(String method) async {
    await MethodChannel('me.yohom/janalytics_fluttify', StandardMethodCodec(FluttifyMessageCodec('janalytics_fluttify'))).invokeMethod('JANALYTICSLoginEvent::set_method', <String, dynamic>{'__this__': this, "method": method});
  
  
  }
  
  Future<void> set_success(bool success) async {
    await MethodChannel('me.yohom/janalytics_fluttify', StandardMethodCodec(FluttifyMessageCodec('janalytics_fluttify'))).invokeMethod('JANALYTICSLoginEvent::set_success', <String, dynamic>{'__this__': this, "success": success});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}

extension JANALYTICSLoginEvent_Batch on List<JANALYTICSLoginEvent> {
  //region getters
  Future<List<String>> get_method_batch() async {
    final resultBatch = await MethodChannel('me.yohom/janalytics_fluttify', StandardMethodCodec(FluttifyMessageCodec('janalytics_fluttify'))).invokeMethod("JANALYTICSLoginEvent::get_method_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  Future<List<bool>> get_success_batch() async {
    final resultBatch = await MethodChannel('me.yohom/janalytics_fluttify', StandardMethodCodec(FluttifyMessageCodec('janalytics_fluttify'))).invokeMethod("JANALYTICSLoginEvent::get_success_batch", [for (final __item__ in this) {'__this__': __item__}]);
  
    final typedResult = (resultBatch as List).cast<bool>().map((__result__) => __result__).toList();
    return typedResult;
  }
  
  //endregion

  //region setters
  Future<void> set_method_batch(List<String> method) async {
    await MethodChannel('me.yohom/janalytics_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('JANALYTICSLoginEvent::set_method_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "method": method[__i__]}]);
  
  
  }
  
  Future<void> set_success_batch(List<bool> success) async {
    await MethodChannel('me.yohom/janalytics_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('JANALYTICSLoginEvent::set_success_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "success": success[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}