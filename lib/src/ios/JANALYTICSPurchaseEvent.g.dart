// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:janalytics_fluttify/src/ios/ios.export.g.dart';
import 'package:janalytics_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

class JANALYTICSPurchaseEvent extends JANALYTICSEventObject  {
  //region constants
  
  //endregion

  //region creators
  static Future<JANALYTICSPurchaseEvent> create__() async {
    final int refId = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('ObjectFactory::createJANALYTICSPurchaseEvent');
    final object = JANALYTICSPurchaseEvent()..refId = refId..tag = 'janalytics_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  //endregion

  //region getters
  Future<double> get_price() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod("JANALYTICSPurchaseEvent::get_price", {'refId': refId});
  
    return result;
  }
  
  Future<bool> get_success() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod("JANALYTICSPurchaseEvent::get_success", {'refId': refId});
  
    return result;
  }
  
  Future<String> get_goodsID() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod("JANALYTICSPurchaseEvent::get_goodsID", {'refId': refId});
  
    return result;
  }
  
  Future<String> get_goodsName() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod("JANALYTICSPurchaseEvent::get_goodsName", {'refId': refId});
  
    return result;
  }
  
  Future<String> get_goodsType() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod("JANALYTICSPurchaseEvent::get_goodsType", {'refId': refId});
  
    return result;
  }
  
  Future<JANALYTICSPurchaseCurrency> get_currency() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod("JANALYTICSPurchaseEvent::get_currency", {'refId': refId});
  
    return JANALYTICSPurchaseCurrency.values[result];
  }
  
  Future<int> get_quantity() async {
    final result = await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod("JANALYTICSPurchaseEvent::get_quantity", {'refId': refId});
  
    return result;
  }
  
  //endregion

  //region setters
  Future<void> set_price(double price) async {
    await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('JANALYTICSPurchaseEvent::set_price', {'refId': refId, "price": price});
  
  
  }
  
  Future<void> set_success(bool success) async {
    await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('JANALYTICSPurchaseEvent::set_success', {'refId': refId, "success": success});
  
  
  }
  
  Future<void> set_goodsID(String goodsID) async {
    await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('JANALYTICSPurchaseEvent::set_goodsID', {'refId': refId, "goodsID": goodsID});
  
  
  }
  
  Future<void> set_goodsName(String goodsName) async {
    await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('JANALYTICSPurchaseEvent::set_goodsName', {'refId': refId, "goodsName": goodsName});
  
  
  }
  
  Future<void> set_goodsType(String goodsType) async {
    await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('JANALYTICSPurchaseEvent::set_goodsType', {'refId': refId, "goodsType": goodsType});
  
  
  }
  
  Future<void> set_currency(JANALYTICSPurchaseCurrency currency) async {
    await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('JANALYTICSPurchaseEvent::set_currency', {'refId': refId, "currency": currency.index});
  
  
  }
  
  Future<void> set_quantity(int quantity) async {
    await MethodChannel('me.yohom/janalytics_fluttify').invokeMethod('JANALYTICSPurchaseEvent::set_quantity', {'refId': refId, "quantity": quantity});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}