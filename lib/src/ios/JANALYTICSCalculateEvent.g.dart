// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:janalytics_fluttify/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class JANALYTICSCalculateEvent extends JANALYTICSEventObject  {
  //region constants
  static const String name__ = 'JANALYTICSCalculateEvent';

  @override
  final String tag__ = 'janalytics_fluttify';

  
  //endregion

  //region creators
  static Future<JANALYTICSCalculateEvent> create__({ bool init = true /* ios only */ }) async {
    final __result__ = await kJanalyticsFluttifyChannel.invokeMethod(
      'ObjectFactory::createJANALYTICSCalculateEvent',
      {'init': init}
    );
    return JanalyticsFluttifyIOSAs<JANALYTICSCalculateEvent>(__result__);
  }
  
  static Future<List<JANALYTICSCalculateEvent>> create_batch__(int length, { bool init = true /* ios only */ }) async {
    assert(true);
    final __result_batch__ = await  kJanalyticsFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchJANALYTICSCalculateEvent',
      {'length': length, 'init': init}
    );
    return __result_batch__
        .map((it) => JanalyticsFluttifyIOSAs<JANALYTICSCalculateEvent>(it))
        .toList();
  }
  
  //endregion

  //region getters
  Future<String> get_eventID() async {
    final __result__ = await kJanalyticsFluttifyChannel.invokeMethod("JANALYTICSCalculateEvent::get_eventID", {'__this__': this});
    return __result__;
  }
  
  Future<double> get_value() async {
    final __result__ = await kJanalyticsFluttifyChannel.invokeMethod("JANALYTICSCalculateEvent::get_value", {'__this__': this});
    return __result__;
  }
  
  //endregion

  //region setters
  Future<void> set_eventID(String eventID) async {
    await kJanalyticsFluttifyChannel.invokeMethod('JANALYTICSCalculateEvent::set_eventID', <String, dynamic>{'__this__': this, "eventID": eventID});
  
  
  }
  
  Future<void> set_value(double value) async {
    await kJanalyticsFluttifyChannel.invokeMethod('JANALYTICSCalculateEvent::set_value', <String, dynamic>{'__this__': this, "value": value});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion

  @override
  String toString() {
    return 'JANALYTICSCalculateEvent{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension JANALYTICSCalculateEvent_Batch on List<JANALYTICSCalculateEvent> {
  //region getters
  Future<List<String>> get_eventID_batch() async {
    final resultBatch = await kJanalyticsFluttifyChannel.invokeMethod("JANALYTICSCalculateEvent::get_eventID_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List)?.map((__result__) => __result__)?.cast<String>()?.toList();
  }
  
  Future<List<double>> get_value_batch() async {
    final resultBatch = await kJanalyticsFluttifyChannel.invokeMethod("JANALYTICSCalculateEvent::get_value_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List)?.map((__result__) => __result__)?.cast<double>()?.toList();
  }
  
  //endregion

  //region setters
  Future<void> set_eventID_batch(List<String> eventID) async {
    await kJanalyticsFluttifyChannel.invokeMethod('JANALYTICSCalculateEvent::set_eventID_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "eventID": eventID[__i__]}]);
  
  
  }
  
  Future<void> set_value_batch(List<double> value) async {
    await kJanalyticsFluttifyChannel.invokeMethod('JANALYTICSCalculateEvent::set_value_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "value": value[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}