// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:janalytics_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

/* abstract */ class cn_jiguang_analytics_android_api_Event extends java_lang_Object with java_io_Serializable {
  //region constants
  static const String name__ = 'cn.jiguang.analytics.android.api.Event';

  @override
  final String tag__ = 'janalytics_fluttify';

  
  //endregion

  //region creators
  
  //endregion

  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  Future<cn_jiguang_analytics_android_api_Event> setExtMap(Map<String,String> var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: cn.jiguang.analytics.android.api.Event@$refId::setExtMap([\'var1\':$var1])');
    }
  
    // invoke native method
    final __result__ = await kJanalyticsFluttifyChannel.invokeMethod('cn.jiguang.analytics.android.api.Event::setExtMap', {"var1": var1, "__this__": this});
  
  
    // handle native call
  
  
    return JanalyticsFluttifyAndroidAs<cn_jiguang_analytics_android_api_Event>(__result__);
  }
  
  
  Future<cn_jiguang_analytics_android_api_Event> addExtMap(Map<String,String> var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: cn.jiguang.analytics.android.api.Event@$refId::addExtMap([\'var1\':$var1])');
    }
  
    // invoke native method
    final __result__ = await kJanalyticsFluttifyChannel.invokeMethod('cn.jiguang.analytics.android.api.Event::addExtMap', {"var1": var1, "__this__": this});
  
  
    // handle native call
  
  
    return JanalyticsFluttifyAndroidAs<cn_jiguang_analytics_android_api_Event>(__result__);
  }
  
  
  Future<Map<String,String>> getExtMap() async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: cn.jiguang.analytics.android.api.Event@$refId::getExtMap([])');
    }
  
    // invoke native method
    final __result__ = await kJanalyticsFluttifyChannel.invokeMethod('cn.jiguang.analytics.android.api.Event::getExtMap', {"__this__": this});
  
  
    // handle native call
  
  
    return __result__;
  }
  
  
  Future<int> getItime() async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: cn.jiguang.analytics.android.api.Event@$refId::getItime([])');
    }
  
    // invoke native method
    final __result__ = await kJanalyticsFluttifyChannel.invokeMethod('cn.jiguang.analytics.android.api.Event::getItime', {"__this__": this});
  
  
    // handle native call
  
  
    return __result__;
  }
  
  
  Future<cn_jiguang_analytics_android_api_Event> setItime(int var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: cn.jiguang.analytics.android.api.Event@$refId::setItime([\'var1\':$var1])');
    }
  
    // invoke native method
    final __result__ = await kJanalyticsFluttifyChannel.invokeMethod('cn.jiguang.analytics.android.api.Event::setItime', {"var1": var1, "__this__": this});
  
  
    // handle native call
  
  
    return JanalyticsFluttifyAndroidAs<cn_jiguang_analytics_android_api_Event>(__result__);
  }
  
  
  Future<cn_jiguang_analytics_android_api_Event> addKeyValue(String var1, String var2) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: cn.jiguang.analytics.android.api.Event@$refId::addKeyValue([\'var1\':$var1, \'var2\':$var2])');
    }
  
    // invoke native method
    final __result__ = await kJanalyticsFluttifyChannel.invokeMethod('cn.jiguang.analytics.android.api.Event::addKeyValue', {"var1": var1, "var2": var2, "__this__": this});
  
  
    // handle native call
  
  
    return JanalyticsFluttifyAndroidAs<cn_jiguang_analytics_android_api_Event>(__result__);
  }
  
  
  Future<bool> checkEvent() async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: cn.jiguang.analytics.android.api.Event@$refId::checkEvent([])');
    }
  
    // invoke native method
    final __result__ = await kJanalyticsFluttifyChannel.invokeMethod('cn.jiguang.analytics.android.api.Event::checkEvent', {"__this__": this});
  
  
    // handle native call
  
  
    return __result__;
  }
  
  //endregion

  @override
  String toString() {
    return 'cn_jiguang_analytics_android_api_Event{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension cn_jiguang_analytics_android_api_Event_Batch on List<cn_jiguang_analytics_android_api_Event> {
  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  Future<List<cn_jiguang_analytics_android_api_Event>> setExtMap_batch(List<Map<String,String>> var1) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kJanalyticsFluttifyChannel.invokeMethod('cn.jiguang.analytics.android.api.Event::setExtMap_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => JanalyticsFluttifyAndroidAs<cn_jiguang_analytics_android_api_Event>(__result__)).cast<cn_jiguang_analytics_android_api_Event>().toList();
  }
  
  
  Future<List<cn_jiguang_analytics_android_api_Event>> addExtMap_batch(List<Map<String,String>> var1) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kJanalyticsFluttifyChannel.invokeMethod('cn.jiguang.analytics.android.api.Event::addExtMap_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => JanalyticsFluttifyAndroidAs<cn_jiguang_analytics_android_api_Event>(__result__)).cast<cn_jiguang_analytics_android_api_Event>().toList();
  }
  
  
  Future<List<Map<String,String>>> getExtMap_batch() async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kJanalyticsFluttifyChannel.invokeMethod('cn.jiguang.analytics.android.api.Event::getExtMap_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => __result__).cast<Map<String,String>>().toList();
  }
  
  
  Future<List<int>> getItime_batch() async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kJanalyticsFluttifyChannel.invokeMethod('cn.jiguang.analytics.android.api.Event::getItime_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => __result__).cast<int>().toList();
  }
  
  
  Future<List<cn_jiguang_analytics_android_api_Event>> setItime_batch(List<int> var1) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kJanalyticsFluttifyChannel.invokeMethod('cn.jiguang.analytics.android.api.Event::setItime_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => JanalyticsFluttifyAndroidAs<cn_jiguang_analytics_android_api_Event>(__result__)).cast<cn_jiguang_analytics_android_api_Event>().toList();
  }
  
  
  Future<List<cn_jiguang_analytics_android_api_Event>> addKeyValue_batch(List<String> var1, List<String> var2) async {
    assert(var1.length == var2.length);
  
    // invoke native method
    final resultBatch = await kJanalyticsFluttifyChannel.invokeMethod('cn.jiguang.analytics.android.api.Event::addKeyValue_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__], "var2": var2[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => JanalyticsFluttifyAndroidAs<cn_jiguang_analytics_android_api_Event>(__result__)).cast<cn_jiguang_analytics_android_api_Event>().toList();
  }
  
  
  Future<List<bool>> checkEvent_batch() async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kJanalyticsFluttifyChannel.invokeMethod('cn.jiguang.analytics.android.api.Event::checkEvent_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => __result__).cast<bool>().toList();
  }
  
  //endregion
}